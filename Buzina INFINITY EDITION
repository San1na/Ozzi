local OrionLib = loadstring(game:HttpGet("https://twix.cyou/Orion.txt", true))()
local Window = OrionLib:MakeWindow({Name = "üíïBuzinaüòò", TestMode = true, SaveConfig = true, ConfigFolder = "Buzina"})

local Tab = Window:MakeTab({
	Name = "Home",
	Icon = "rbxassetid://4483345998",
	TestersOnly = false
})

local Section = Tab:AddSection({
	Name = "Roll"
})

local UnSafeAutoRoll = false  -- –§–ª–∞–≥ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ü–∏–∫–ª–∞

Tab:AddToggle({
	Name = "UnSafe AutoRoll",
	Default = false,
	Callback = function(Value)
        UnSafeAutoRoll = Value  -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–ª–∞–≥–∞
        if UnSafeAutoRoll then
            task.spawn(function()  -- –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –∑–∞–≤–∏—Å–∞–ª–∞ –∏–≥—Ä–∞
                while UnSafeAutoRoll do
                    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Eggs_Roll"):InvokeServer()
                    wait(0.5)  -- –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 0.5 —Å–µ–∫—É–Ω–¥—ã
                end
            end)
        end
	end
})

local VirtualInputManager = game:GetService("VirtualInputManager")

local function SafeAutoRoll()
    -- –ù–∞–∂–∞—Ç–∏–µ –∫–ª–∞–≤–∏—à–∏ R
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.R, false, game)
    wait(0.1)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.R, false, game)
    wait(0.75)

    -- –ö–ª–∏–∫ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º X 378 Y 898
    VirtualInputManager:SendMouseButtonEvent(378, 898, 0, true, game, 0)
    wait(0.1)
    VirtualInputManager:SendMouseButtonEvent(378, 898, 0, false, game, 0)
    wait(0.1)

    -- –ö–ª–∏–∫ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º X 1326 Y 905
    VirtualInputManager:SendMouseButtonEvent(1326, 905, 0, true, game, 0)
    wait(0.1)
    VirtualInputManager:SendMouseButtonEvent(1326, 905, 0, false, game, 0)
end

Tab:AddToggle({
	Name = "Safe AutoRoll",
	Default = false,
	Callback = function(Value)
        if Value then
            task.spawn(SafeAutoRoll)  -- –í—ã–ø–æ–ª–Ω—è–µ–º –æ–¥–∏–Ω —Ä–∞–∑ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        end
	end    
})

local Section = Tab:AddSection({
	Name = "Orbs"
})

Tab:AddButton({
	Name = "Collect All Orbs",
	Callback = function()
    local thingsFolder = workspace:FindFirstChild("__THINGS")

    if thingsFolder then
        local orbsFolder = thingsFolder:FindFirstChild("Orbs")
                orbsFolder:Destroy() -- –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É
    end
  	end    
})

local Section = Tab:AddSection({
	Name = "Merchants"
})

Tab:AddToggle({
    Name = "AutoBuy StandartMerchant",
    Default = false,
    Callback = function(Value)
        _G.AutoBuyStandardMerchant = Value

        if Value then
            spawn(function()
                while _G.AutoBuyStandardMerchant do
                    for i = 1, 6 do
                        local args = { [1] = "StandardMerchant", [2] = i }
                        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("CustomMerchants_Purchase"):InvokeServer(unpack(args))
                    end
                    wait(0.35) -- –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø–æ–∫—É–ø–∫–∞–º–∏
                end
            end)
        end
    end    
})

Tab:AddToggle({
    Name = "AutoBuy PotionVendingMachine",
    Default = false,
    Callback = function(Value)
        _G.AutoBuyPotionVendingMachine = Value

        if Value then
            spawn(function()
                while _G.AutoBuyPotionVendingMachine do
                    local args = { [1] = "PotionVendingMachine" }
                    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("VendingMachines_Purchase"):InvokeServer(unpack(args))
                    wait(0.35)
                end
            end)
        end
    end    
})

local Section = Tab:AddSection({
	Name = "Other"
})

Tab:AddButton({
	Name = "Removes Lags From Opening Lootboxes",
	Callback = function()
local replicatedStorage = game:GetService("ReplicatedStorage")

-- –ü—É—Ç—å –∫ —ç—Ñ—Ñ–µ–∫—Ç–∞–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
local confetti1 = replicatedStorage:FindFirstChild("Library") and replicatedStorage.Library.Client.GUIFX:FindFirstChild("Confetti")
local confetti2 = replicatedStorage:FindFirstChild("Library") and replicatedStorage.Library.Client.WorldFX:FindFirstChild("Confetti")

if confetti1 then
    confetti1:Destroy()
end

if confetti2 then
    confetti2:Destroy()
 end
  	end    
})

Tab:AddSlider({
	Name = "WalkSpeed",
	Min = 16,
	Max = 500,
	Default = 16,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Speed",
	Callback = function(Value)
    	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
	end    
})

Tab:AddSlider({
	Name = "JumpSpeed",
	Min = 50,
	Max = 500,
	Default = 50,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "JumpSpeed",
	Callback = function(Value)
    	game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
	end    
})

local CurrentFPS = 60

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è FPS
local function ChangeFPS(value)
    CurrentFPS = value
    setfflag("TaskSchedulerTargetFps", tostring(value))
    print("FPS limit set to:", value)
end

Tab:AddSlider({
	Name = "Fps Limit",
	Min = 15,
	Max = 144,
	Default = 60,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Change Fps Limit",
	Callback = function(Value)
    ChangeFPS(value)
	end    
})

Tab:AddButton({
	Name = "ServerHop",
	Callback = function()
        local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local PlaceId = game.PlaceId

local function serverHop()
    -- –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
    local servers = {}
    local cursor = nil
    local url = "https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
    
    repeat
        local response = game:HttpGet(cursor and (url .. "&cursor=" .. cursor) or url)
        local data = game:GetService("HttpService"):JSONDecode(response)
        
        for _, server in pairs(data.data) do
            if server.playing < server.maxPlayers then
                table.insert(servers, server.id)
            end
        end
        
        cursor = data.nextPageCursor
    until not cursor or #servers > 0

    if #servers > 0 then
        -- –ü–µ—Ä–µ–Ω–æ—Å–∏–º –∏–≥—Ä–æ–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
        local randomServer = servers[math.random(1, #servers)]
        TeleportService:TeleportToPlaceInstance(PlaceId, randomServer, Players.LocalPlayer)
    else
        print(".")
    end
end

-- –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
serverHop()
  	end    
})

Tab:AddButton({
	Name = "AntiAfk",
	Callback = function()
        repeat wait() until game:IsLoaded() and game.Players and game.Players.LocalPlayer and game.Players.LocalPlayer.Character

if getgenv().AntiAfkExecuted and thisoneissocoldww then 
    getgenv().AntiAfkExecuted = false
	getgenv().zamanbaslaticisi = false
	game.CoreGui.thisoneissocoldww:Destroy()
end

getgenv().AntiAfkExecuted = true

local thisoneissocoldww = Instance.new("ScreenGui")
local madebybloodofbatus = Instance.new("Frame")
local UICornerw = Instance.new("UICorner")
local DestroyButton = Instance.new("TextButton")
local uselesslabelone = Instance.new("TextLabel")
local timerlabel = Instance.new("TextLabel")
local uselesslabeltwo = Instance.new("TextLabel")
local fpslabel = Instance.new("TextLabel")
local uselesslabelthree = Instance.new("TextLabel")
local pinglabel = Instance.new("TextLabel")
local uselessframeone = Instance.new("Frame")
local UICornerww = Instance.new("UICorner")
local uselesslabelfour = Instance.new("TextLabel")

--Properties:

thisoneissocoldww.Name = "thisoneissocoldww"
thisoneissocoldww.Parent = game.CoreGui
thisoneissocoldww.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

madebybloodofbatus.Name = "madebybloodofbatus"
madebybloodofbatus.Parent = thisoneissocoldww
madebybloodofbatus.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
madebybloodofbatus.Position = UDim2.new(0.0854133144, 0, 0.13128835, 0)
madebybloodofbatus.Size = UDim2.new(0, 225, 0, 96)

UICornerw.Name = "UICornerw"
UICornerw.Parent = madebybloodofbatus

DestroyButton.Name = "DestroyButton"
DestroyButton.Parent = madebybloodofbatus
DestroyButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DestroyButton.BackgroundTransparency = 1.000
DestroyButton.Position = UDim2.new(0.871702373, 0, 0.0245379955, 0)
DestroyButton.Size = UDim2.new(0, 27, 0, 15)
DestroyButton.Font = Enum.Font.SourceSans
DestroyButton.Text = "X"
DestroyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DestroyButton.TextSize = 14.000

DestroyButton.MouseButton1Click:connect(function()
	getgenv().AntiAfkExecuted = false
	
	wait(0.1)
	thisoneissocoldww:Destroy()
end)

uselesslabelone.Name = "uselesslabelone"
uselesslabelone.Parent = madebybloodofbatus
uselesslabelone.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
uselesslabelone.BackgroundTransparency = 1.000
uselesslabelone.Position = UDim2.new(0.302473009, 0, 0, 0)
uselesslabelone.Size = UDim2.new(0, 95, 0, 24)
uselesslabelone.Font = Enum.Font.SourceSans
uselesslabelone.Text = "Anti Afk By titela42"
uselesslabelone.TextColor3 = Color3.fromRGB(255, 255, 255)
uselesslabelone.TextSize = 14.000

timerlabel.Name = "timerlabel"
timerlabel.Parent = madebybloodofbatus
timerlabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
timerlabel.BackgroundTransparency = 1.000
timerlabel.Position = UDim2.new(0.65344125, 0, 0.68194294, 0)
timerlabel.Size = UDim2.new(0, 60, 0, 24)
timerlabel.Font = Enum.Font.SourceSans
timerlabel.Text = "0:0:0"
timerlabel.TextColor3 = Color3.fromRGB(255, 255, 255)
timerlabel.TextSize = 14.000

uselesslabeltwo.Name = "uselesslabeltwo"
uselesslabeltwo.Parent = madebybloodofbatus
uselesslabeltwo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
uselesslabeltwo.BackgroundTransparency = 1.000
uselesslabeltwo.Position = UDim2.new(0.038864471, 0, 0.373806685, 0)
uselesslabeltwo.Size = UDim2.new(0, 29, 0, 24)
uselesslabeltwo.Font = Enum.Font.SourceSans
uselesslabeltwo.Text = "Ping: "
uselesslabeltwo.TextColor3 = Color3.fromRGB(255, 255, 255)
uselesslabeltwo.TextSize = 14.000

fpslabel.Name = "fpslabel"
fpslabel.Parent = madebybloodofbatus
fpslabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
fpslabel.BackgroundTransparency = 1.000
fpslabel.Position = UDim2.new(0.724226236, 0, 0.358796299, 0)
fpslabel.Size = UDim2.new(0, 55, 0, 24)
fpslabel.Font = Enum.Font.SourceSans
fpslabel.Text = "this contact dev"
fpslabel.TextColor3 = Color3.fromRGB(255, 255, 255)
fpslabel.TextSize = 14.000

uselesslabelthree.Name = "uselesslabelthree"
uselesslabelthree.Parent = madebybloodofbatus
uselesslabelthree.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
uselesslabelthree.BackgroundTransparency = 1.000
uselesslabelthree.Position = UDim2.new(0.506917477, 0, 0.352585167, 0)
uselesslabelthree.Size = UDim2.new(0, 26, 0, 24)
uselesslabelthree.Font = Enum.Font.SourceSans
uselesslabelthree.Text = "Fps: "
uselesslabelthree.TextColor3 = Color3.fromRGB(255, 255, 255)
uselesslabelthree.TextSize = 14.000

pinglabel.Name = "pinglabel"
pinglabel.Parent = madebybloodofbatus
pinglabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
pinglabel.BackgroundTransparency = 1.000
pinglabel.Position = UDim2.new(0.20330891, 0, 0.371578127, 0)
pinglabel.Size = UDim2.new(0, 55, 0, 24)
pinglabel.Font = Enum.Font.SourceSans
pinglabel.Text = "if you see this"
pinglabel.TextColor3 = Color3.fromRGB(255, 255, 255)
pinglabel.TextSize = 14.000
pinglabel.TextWrapped = true

uselessframeone.Name = "uselessframeone"
uselessframeone.Parent = madebybloodofbatus
uselessframeone.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
uselessframeone.Position = UDim2.new(0.00444444455, 0, 0.243312627, 0)
uselessframeone.Size = UDim2.new(0, 224, 0, 5)

UICornerww.CornerRadius = UDim.new(0, 50)
UICornerww.Name = "UICornerww"
UICornerww.Parent = uselessframeone

uselesslabelfour.Name = "uselesslabelfour"
uselesslabelfour.Parent = madebybloodofbatus
uselesslabelfour.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
uselesslabelfour.BackgroundTransparency = 1.000
uselesslabelfour.Position = UDim2.new(0.0580285639, 0, 0.8125, 0)
uselesslabelfour.Size = UDim2.new(0, 95, 0, 12)
uselesslabelfour.Font = Enum.Font.SourceSans
uselesslabelfour.Text = "Anti-Afk Auto Enabled"
uselesslabelfour.TextColor3 = Color3.fromRGB(255, 255, 255)
uselesslabelfour.TextSize = 14.000



local Drag = game.CoreGui.thisoneissocoldww.madebybloodofbatus
gsCoreGui = game:GetService("CoreGui")
gsTween = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local dragging
local dragInput
local dragStart
local startPos
local function update(input)
	local delta = input.Position - dragStart
	local dragTime = 0.04
	local SmoothDrag = {}
	SmoothDrag.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	local dragSmoothFunction = gsTween:Create(Drag, TweenInfo.new(dragTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), SmoothDrag)
	dragSmoothFunction:Play()
end
Drag.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = Drag.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
Drag.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging and Drag.Size then
		update(input)
	end
end)



local bbbatusxxxddddd = game:service'VirtualUser'

game:service'Players'.LocalPlayer.Idled:connect(function()
	bbbatusxxxddddd:CaptureController()
	bbbatusxxxddddd:ClickButton2(Vector2.new())
end)




local FPSsLabel = fpslabel
local RunService = game:GetService("RunService")
local RenderStepped = RunService.RenderStepped
local sec = nil
local FPS = {}

local function fre()
	local fr = tick()
	for index = #FPS,1,-1 do
		FPS[index + 1] = (FPS[index] >= fr - 1) and FPS[index] or nil
	end
	FPS[1] = fr
	local fps = (tick() - sec >= 1 and #FPS) or (#FPS / (tick() - sec))
	fps = math.floor(fps)
	fpslabel.Text = fps
end


sec = tick()
RenderStepped:Connect(fre)




spawn(function()
	repeat
		wait(1)
		local ping = tonumber(game:GetService("Stats"):FindFirstChild("PerformanceStats").Ping:GetValue())
		ping = math.floor(ping)
		pinglabel.Text = ping



	until pinglabel == nil
end)

local saniye = 0



local dakika = 0



local saat = 0




getgenv().zamanbaslaticisi = true

while true do


		if getgenv().zamanbaslaticisi then

			saniye = saniye + 1

			wait(1)

		end --if zaman baslaticisi end


		if saniye >= 60 then
			saniye = 0
			dakika = dakika + 1

		end --if saniye 60 end


		if dakika >= 60 then
			dakika = 0
			saat = saat + 1

		end --if dakika 60 end

		timerlabel.Text = saat..":"..dakika..":"..saniye
	end
  	end    
})

Tab:AddButton({
	Name = "Destroy Gui",
	Callback = function()
OrionLib:Destroy()
  	end    
})

local Tab = Window:MakeTab({
	Name = "Kraken",
	Icon = "rbxassetid://11752855970",
	TestersOnly = false
})

local Autoclaim = false  -- –§–ª–∞–≥ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ü–∏–∫–ª–∞

Tab:AddToggle({
	Name = "AutoClaim",
	Default = false,
	Callback = function(Value)
        Autoclaim = Value  -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–ª–∞–≥–∞
        if Autoclaim then
            task.spawn(function()  -- –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –∑–∞–≤–∏—Å–∞–ª–∞ –∏–≥—Ä–∞
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local network = replicatedStorage:WaitForChild("Network")
    local Fishing_FishermanClaim = network:WaitForChild("Fishing_FishermanClaim")
    
    while Autoclaim do
        Fishing_FishermanClaim:InvokeServer()
        wait(0.5)  -- –û–∂–∏–¥–∞–Ω–∏–µ 0.75 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤—ã–∑–æ–≤–æ–º
                end
            end)
        end
	end  
})

local Tab = Window:MakeTab({
	Name = "Fishing",
	Icon = "rbxassetid://11752855970",
	TestersOnly = false
})

local originalSize = nil
local originalPosition = nil

Tab:AddToggle({
    Name = "Normal AutoFish",
    Default = false,
    Callback = function(Value)
        local padGlow = workspace:FindFirstChild("MAP") 
            and workspace.MAP:FindFirstChild("INTERACT")
            and workspace.MAP.INTERACT:FindFirstChild("FishingPads") 
            and workspace.MAP.INTERACT.FishingPads:FindFirstChild("Default") 
            and workspace.MAP.INTERACT.FishingPads.Default:FindFirstChild("PadGlow")

        if not padGlow then
            warn("PadGlow –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        end

        -- –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if not originalSize or not originalPosition then
            originalSize = padGlow.Size
            originalPosition = padGlow.Position
        end

        if Value then
            print("–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞")
            padGlow.Size = Vector3.new(originalSize.X * 100, originalSize.Y, originalSize.Z * 100)
            padGlow.Anchored = true
            padGlow.CanCollide = false
        else
            print("–°–±—Ä–æ—Å –æ–±—ä–µ–∫—Ç–∞ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –≤–∏–¥—É")
            padGlow.Size = originalSize
            padGlow.Position = originalPosition
        end
    end
})

local originalSize = nil
local originalPosition = nil

Tab:AddToggle({
    Name = "Ice AutoFish",
    Default = false,
    Callback = function(Value)
        local padGlow = workspace:FindFirstChild("MAP") 
            and workspace.MAP:FindFirstChild("INTERACT")
            and workspace.MAP.INTERACT:FindFirstChild("FishingPads") 
            and workspace.MAP.INTERACT.FishingPads:FindFirstChild("Ice") 
            and workspace.MAP.INTERACT.FishingPads.Ice:FindFirstChild("PadGlow")

        if not padGlow then
            warn("PadGlow –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        end

        -- –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if not originalSize or not originalPosition then
            originalSize = padGlow.Size
            originalPosition = padGlow.Position
        end

        if Value then
            print("–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞")
            padGlow.Size = Vector3.new(originalSize.X * 100, originalSize.Y, originalSize.Z * 100)
            padGlow.Anchored = true
            padGlow.CanCollide = false
        else
            print("–°–±—Ä–æ—Å –æ–±—ä–µ–∫—Ç–∞ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –≤–∏–¥—É")
            padGlow.Size = originalSize
            padGlow.Position = originalPosition
        end
    end
})

local originalSize = nil
local originalPosition = nil

Tab:AddToggle({
    Name = "Corrupt AutoFish",
    Default = false,
    Callback = function(Value)
        local padGlow = workspace:FindFirstChild("MAP") 
            and workspace.MAP:FindFirstChild("INTERACT")
            and workspace.MAP.INTERACT:FindFirstChild("FishingPads") 
            and workspace.MAP.INTERACT.FishingPads:FindFirstChild("Corrupted") 
            and workspace.MAP.INTERACT.FishingPads.Corrupted:FindFirstChild("PadGlow")

        if not padGlow then
            warn("PadGlow –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        end

        -- –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if not originalSize or not originalPosition then
            originalSize = padGlow.Size
            originalPosition = padGlow.Position
        end

        if Value then
            print("–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞")
            padGlow.Size = Vector3.new(originalSize.X * 100, originalSize.Y, originalSize.Z * 100)
            padGlow.Anchored = true
            padGlow.CanCollide = false
        else
            print("–°–±—Ä–æ—Å –æ–±—ä–µ–∫—Ç–∞ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –≤–∏–¥—É")
            padGlow.Size = originalSize
            padGlow.Position = originalPosition
        end
    end
})

local Section = Tab:AddSection({
	Name = "Merchants"
})

_G.AutoBuyFishingMerchant = false
_G.AutoBuyIceFishingMerchant = false

local function purchaseFishingMerchant()
    for i = 1, 6 do
        local args = {"FishingMerchant", i}
        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("CustomMerchants_Purchase"):InvokeServer(unpack(args))
    end
end

local function purchaseIceFishingMerchant()
    for i = 1, 6 do
        local args = {"IceFishingMerchant", i}
        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("CustomMerchants_Purchase"):InvokeServer(unpack(args))
    end
end

local function startAutoBuying()
    while _G.AutoBuyFishingMerchant or _G.AutoBuyIceFishingMerchant do
        if _G.AutoBuyFishingMerchant then
            purchaseFishingMerchant()
        end
        if _G.AutoBuyIceFishingMerchant then
            purchaseIceFishingMerchant()
        end
        wait(0.35)
    end
end

Tab:AddToggle({
    Name = "AutoBuy Fishing Merchant",
    Default = false,
    Callback = function(Value)
        _G.AutoBuyFishingMerchant = Value
        if Value then
            spawn(startAutoBuying)
        end
    end    
})

Tab:AddToggle({
    Name = "AutoBuy IceFishing Merchant",
    Default = false,
    Callback = function(Value)
        _G.AutoBuyIceFishingMerchant = Value
        if Value then
            spawn(startAutoBuying)
        end
    end    
})

local Tab = Window:MakeTab({
	Name = "Mining",
	Icon = "rbxassetid://4483345998",
	TestersOnly = false
})

local Section = Tab:AddSection({
	Name = "Mining"
})

-- –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ –ø–æ–∑–∏—Ü–∏–π
local oreData = {}

-- –°–ø–∏—Å–æ–∫ —Ä—É–¥
local ores = {
    "Dirt Ore", "Stone Ore", "Bronze Ore", "Iron Ore",
    "Gold Ore", "Emerald Ore", "Obsidian Ore",
    "Runic Ore", "Magma Ore"
}

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π
local function createOreToggle(oreName)
    Tab:AddToggle({
        Name = oreName,
        Default = false,
        Callback = function(Value)
            local miningPads = workspace:FindFirstChild("MAP") 
                and workspace.MAP:FindFirstChild("INTERACT")
                and workspace.MAP.INTERACT:FindFirstChild("MiningPads")

            if not miningPads then
                warn("MiningPads –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                return
            end

            local padGlow = miningPads:FindFirstChild(oreName) 
                and miningPads[oreName]:FindFirstChild("PadGlow")

            if not padGlow then
                warn(oreName .. " PadGlow –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                return
            end

            -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏ –ø–æ–∑–∏—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
            if not oreData[oreName] then
                oreData[oreName] = { Size = padGlow.Size, Position = padGlow.Position }
            end

            if Value then
                print("–£–≤–µ–ª–∏—á–µ–Ω–∏–µ " .. oreName)
                padGlow.Size = Vector3.new(oreData[oreName].Size.X * 100, oreData[oreName].Size.Y, oreData[oreName].Size.Z * 100)
                padGlow.Anchored = true
                padGlow.CanCollide = false
            else
                print("–°–±—Ä–æ—Å " .. oreName)
                padGlow.Size = oreData[oreName].Size
                padGlow.Position = oreData[oreName].Position
            end
        end
    })
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π –¥–ª—è –≤—Å–µ—Ö —Ä—É–¥
for _, oreName in ipairs(ores) do
    createOreToggle(oreName)
end

local Section = Tab:AddSection({
    Name = "Merchant"
})

local isAutoMerchantEnabled = false -- –§–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏

local function performPurchase()
    while isAutoMerchantEnabled do
        local replicatedStorage = game:GetService("ReplicatedStorage")
        local network = replicatedStorage:FindFirstChild("Network")

        if network then
            local customMerchant = network:FindFirstChild("CustomMerchants_Purchase")
            if customMerchant then
                for i = 1, 8 do -- –¶–∏–∫–ª —Å 1 –¥–æ 8
                    if not isAutoMerchantEnabled then return end -- –û—Å—Ç–∞–Ω–æ–≤–∫–∞, –µ—Å–ª–∏ –∞–≤—Ç–æ-—Å–∫—É–ø–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞

                    local args = {
                        [1] = "MiningMerchant",
                        [2] = i, -- –ò–Ω–¥–µ–∫—Å –ø–æ–∫—É–ø–∫–∏
                    }

                    local success, err = pcall(function()
                        customMerchant:InvokeServer(unpack(args))
                    end)

                    if not success then
                        warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ InvokeServer: " .. tostring(err))
                    end

                    wait(0.35) -- –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–∫—É–ø–∫–∞–º–∏
                end
            else
                warn("–ù–µ –Ω–∞–π–¥–µ–Ω –æ–±—ä–µ–∫—Ç CustomMerchants_Purchase")
                return
            end
        else
            warn("–ù–µ –Ω–∞–π–¥–µ–Ω –æ–±—ä–µ–∫—Ç Network –≤ ReplicatedStorage")
            return
        end

        wait(0.35) -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Ü–∏–∫–ª–∞–º–∏
    end
end

Tab:AddToggle({
    Name = "AutoBuy MiningMerchant",
    Default = false,
    Callback = function(Value)
        isAutoMerchantEnabled = Value -- –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥
        if isAutoMerchantEnabled then
            task.spawn(performPurchase) -- –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ
        end
    end    
})

local Tab = Window:MakeTab({
	Name = "AutoUse/Open",
	Icon = "rbxassetid://11752855970",
	TestersOnly = false
})


local Section = Tab:AddSection({
	Name = "Keys"
})

Tab:AddToggle({
    Name = "CrystalKey",
    Default = false,
    Callback = function(Value)
        local toggled = Value

        while toggled do
            local args = {
                [1] = 1,
                [2] = false
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("LootChest_Unlock"):InvokeServer(unpack(args))
            wait(0) -- –ó–∞–¥–µ—Ä–∂–∫–∞ 0 —Å–µ–∫—É–Ω–¥
        end
    end    
})

Tab:AddToggle({
    Name = "SecretKey",
    Default = false,
    Callback = function(Value)
        local toggled = Value

        while toggled do
            local args = {
                [1] = 1,
                [2] = true
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("LootChest_Unlock"):InvokeServer(unpack(args))
            wait(0) -- –ó–∞–¥–µ—Ä–∂–∫–∞ 0 —Å–µ–∫—É–Ω–¥
        end
    end    
})

local Section = Tab:AddSection({
    Name = "Mining Chests"
})

local toggles = {}

local function startLoop(lootboxID)
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Save = require(ReplicatedStorage.Library.Client.Save)
    local Inventory = Save.Get()["Inventory"]
    local RNS = ReplicatedStorage:WaitForChild("Network")
    
    while toggles[lootboxID] do
        for i, v in pairs(Inventory.Lootbox) do
            if v.id == lootboxID then
                local args = {
                    [1] = i,
                    [2] = 50
                }
                RNS:WaitForChild("Lootbox: Open"):InvokeServer(unpack(args))
            end
        end
        task.wait(0)
    end
end

Tab:AddToggle({
    Name = "Basic",
    Default = false,
    Callback = function(Value)
        toggles["Basic Mining Chest"] = Value
        if Value then
            task.spawn(function()
                startLoop("Basic Mining Chest")
            end)
        end
    end
})

Tab:AddToggle({
    Name = "Rare",
    Default = false,
    Callback = function(Value)
        toggles["Rare Mining Chest"] = Value
        if Value then
            task.spawn(function()
                startLoop("Rare Mining Chest")
            end)
        end
    end
})

Tab:AddToggle({
    Name = "Epic",
    Default = false,
    Callback = function(Value)
        toggles["Epic Mining Chest"] = Value
        if Value then
            task.spawn(function()
                startLoop("Epic Mining Chest")
            end)
        end
    end
})

Tab:AddToggle({
    Name = "Legendary",
    Default = false,
    Callback = function(Value)
        toggles["Legendary Mining Chest"] = Value
        if Value then
            task.spawn(function()
                startLoop("Legendary Mining Chest")
            end)
        end
    end
})

Tab:AddToggle({
    Name = "Celestial",
    Default = false,
    Callback = function(Value)
        toggles["Celestial Mining Chest"] = Value
        if Value then
            task.spawn(function()
                startLoop("Celestial Mining Chest")
            end)
        end
    end
})

Tab:AddToggle({
    Name = "Runic",
    Default = false,
    Callback = function(Value)
        toggles["Runic Mining Chest"] = Value
        if Value then
            task.spawn(function()
                startLoop("Runic Mining Chest")
            end)
        end
    end
})

Tab:AddToggle({
    Name = "AutoBuy MiningMerchant",
    Default = false,
    Callback = function(Value)
        isAutoMerchantEnabled = Value -- –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥
        if isAutoMerchantEnabled then
            task.spawn(performPurchase) -- –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ
        end
    end    
})

local Tab = Window:MakeTab({
    Name = "Statistic",
    Icon = "rbxassetid://11752855970",
    TestersOnly = false
})

local Section = Tab:AddSection({
    Name = "Your Best Roll"
})

-- Function to format large numbers
local function formatNumber(number)
    if number >= 1e9 then
        return string.format("%.1fB", number / 1e9)
    elseif number >= 1e6 then
        return string.format("%.1fM", number / 1e6)
    elseif number >= 1e3 then
        return string.format("%.1fK", number / 1e3)
    else
        return tostring(number)
    end
end

-- Add an initial label for "Best Roll"
local bestRollLabel = Tab:AddLabel("Best Roll: 0")

-- Function to update the label with the current value of "Best Roll"
local function updateBestRoll()
    local bestRollValue = game:GetService("Players").LocalPlayer.leaderstats["\240\159\145\145 Best Roll"].Value
    bestRollLabel:Set("Best Roll: " .. formatNumber(bestRollValue))
end

local Section2 = Tab:AddSection({
    Name = "Your Total Rolls"
})

-- Add an initial label for "Rolls"
local rollsLabel = Tab:AddLabel("Rolls: 0")

-- Function to update the label with the current value of "Rolls"
local function updateRolls()
    local rollsValue = game:GetService("Players").LocalPlayer.leaderstats["\240\159\142\178 Rolls"].Value
    rollsLabel:Set("Rolls: " .. formatNumber(rollsValue))
end

-- Combined update loop for both "Best Roll" and "Rolls"
while true do
    wait(0.1)  -- Wait for 0.1 seconds
    updateBestRoll()  -- Update the "Best Roll" label
    updateRolls()  -- Update the "Rolls" label
end

OrionLib:Init()
