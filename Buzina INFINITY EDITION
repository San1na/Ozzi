local OrionLib = loadstring(game:HttpGet("https://twix.cyou/Orion.txt", true))()
local Window = OrionLib:MakeWindow({Name = "üíïBuzinaüòò", TestMode = true, SaveConfig = true, ConfigFolder = "Buzina"})

local Tab = Window:MakeTab({
	Name = "Home",
	Icon = "rbxassetid://4483345998",
	TestersOnly = false
})

local Section = Tab:AddSection({
	Name = "Farm"
})

local UnSafeAutoRoll = false  -- –§–ª–∞–≥ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ü–∏–∫–ª–∞

Tab:AddToggle({
	Name = "UnSafe AutoRoll",
	Default = false,
	Callback = function(Value)
        UnSafeAutoRoll = Value  -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–ª–∞–≥–∞
        if UnSafeAutoRoll then
            task.spawn(function()  -- –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –∑–∞–≤–∏—Å–∞–ª–∞ –∏–≥—Ä–∞
                while UnSafeAutoRoll do
                    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Eggs_Roll"):InvokeServer()
                    wait(0.5)  -- –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 0.5 —Å–µ–∫—É–Ω–¥—ã
                end
            end)
        end
	end
})

local VirtualInputManager = game:GetService("VirtualInputManager")

local function SafeAutoRoll()
    -- –ù–∞–∂–∞—Ç–∏–µ –∫–ª–∞–≤–∏—à–∏ R
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.R, false, game)
    wait(0.1)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.R, false, game)
    wait(0.75)

    -- –ö–ª–∏–∫ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º X 378 Y 898
    VirtualInputManager:SendMouseButtonEvent(378, 898, 0, true, game, 0)
    wait(0.1)
    VirtualInputManager:SendMouseButtonEvent(378, 898, 0, false, game, 0)
    wait(0.1)

    -- –ö–ª–∏–∫ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º X 1326 Y 905
    VirtualInputManager:SendMouseButtonEvent(1326, 905, 0, true, game, 0)
    wait(0.1)
    VirtualInputManager:SendMouseButtonEvent(1326, 905, 0, false, game, 0)
end

Tab:AddToggle({
	Name = "Safe AutoRoll",
	Default = false,
	Callback = function(Value)
        if Value then
            task.spawn(SafeAutoRoll)  -- –í—ã–ø–æ–ª–Ω—è–µ–º –æ–¥–∏–Ω —Ä–∞–∑ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        end
	end    
})

Tab:AddButton({
	Name = "Collect All Orbs",
	Callback = function()
    local thingsFolder = workspace:FindFirstChild("__THINGS")

    if thingsFolder then
        local orbsFolder = thingsFolder:FindFirstChild("Orbs")
                orbsFolder:Destroy() -- –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É
    end
  	end    
})

Tab:AddToggle({
    Name = "AutoUse CrystalKey",
    Default = false,
    Callback = function(Value)
        local toggled = Value

        while toggled do
            local args = {
                [1] = 1,
                [2] = false
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("LootChest_Unlock"):InvokeServer(unpack(args))
            wait(0) -- –ó–∞–¥–µ—Ä–∂–∫–∞ 0 —Å–µ–∫—É–Ω–¥
        end
    end    
})

Tab:AddToggle({
    Name = "AutoUse SecretKey",
    Default = false,
    Callback = function(Value)
        local toggled = Value

        while toggled do
            local args = {
                [1] = 1,
                [2] = true
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("LootChest_Unlock"):InvokeServer(unpack(args))
            wait(0) -- –ó–∞–¥–µ—Ä–∂–∫–∞ 0 —Å–µ–∫—É–Ω–¥
        end
    end    
})

Tab:AddToggle({
    Name = "AutoBuy StandartMerchant",
    Default = false,
    Callback = function(Value)
        _G.AutoBuyStandardMerchant = Value

        if Value then
            spawn(function()
                while _G.AutoBuyStandardMerchant do
                    for i = 1, 6 do
                        local args = { [1] = "StandardMerchant", [2] = i }
                        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("CustomMerchants_Purchase"):InvokeServer(unpack(args))
                    end
                    wait(0.35) -- –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø–æ–∫—É–ø–∫–∞–º–∏
                end
            end)
        end
    end    
})

Tab:AddToggle({
    Name = "AutoBuy PotionVendingMachine",
    Default = false,
    Callback = function(Value)
        _G.AutoBuyPotionVendingMachine = Value

        if Value then
            spawn(function()
                while _G.AutoBuyPotionVendingMachine do
                    local args = { [1] = "PotionVendingMachine" }
                    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("VendingMachines_Purchase"):InvokeServer(unpack(args))
                    wait(0.35)
                end
            end)
        end
    end    
})

local Tab = Window:MakeTab({
	Name = "Valentine",
	Icon = "rbxassetid://11752855970",
	TestersOnly = false
})

local VAutoRoll = false  -- –§–ª–∞–≥ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ü–∏–∫–ª–∞

Tab:AddToggle({
	Name = "Valentine Board AutoRoll",
	Default = false,
	Callback = function(Value)
        VAutoRoll = Value  -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–ª–∞–≥–∞
        if VAutoRoll then
            task.spawn(function()  -- –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –∑–∞–≤–∏—Å–∞–ª–∞ –∏–≥—Ä–∞
    local args = {"Valentines"}
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local network = replicatedStorage:WaitForChild("Network")
    local boardRoll = network:WaitForChild("Board_Roll")
    
    while VAutoRoll do
        boardRoll:InvokeServer(unpack(args))
        wait(0.5)  -- –û–∂–∏–¥–∞–Ω–∏–µ 0.75 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤—ã–∑–æ–≤–æ–º
                end
            end)
        end
	end  
})

local Tab = Window:MakeTab({
	Name = "Fishing",
	Icon = "rbxassetid://11752855970",
	TestersOnly = false
})

local originalSize = nil
local originalPosition = nil

Tab:AddToggle({
    Name = "Normal AutoFish",
    Default = false,
    Callback = function(Value)
        local padGlow = workspace:FindFirstChild("MAP") 
            and workspace.MAP:FindFirstChild("INTERACT")
            and workspace.MAP.INTERACT:FindFirstChild("FishingPads") 
            and workspace.MAP.INTERACT.FishingPads:FindFirstChild("Default") 
            and workspace.MAP.INTERACT.FishingPads.Default:FindFirstChild("PadGlow")

        if not padGlow then
            warn("PadGlow –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        end

        -- –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if not originalSize or not originalPosition then
            originalSize = padGlow.Size
            originalPosition = padGlow.Position
        end

        if Value then
            print("–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞")
            padGlow.Size = Vector3.new(originalSize.X * 100, originalSize.Y, originalSize.Z * 100)
            padGlow.Anchored = true
            padGlow.CanCollide = false
        else
            print("–°–±—Ä–æ—Å –æ–±—ä–µ–∫—Ç–∞ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –≤–∏–¥—É")
            padGlow.Size = originalSize
            padGlow.Position = originalPosition
        end
    end
})

local originalSize = nil
local originalPosition = nil

Tab:AddToggle({
    Name = "Ice AutoFish",
    Default = false,
    Callback = function(Value)
        local padGlow = workspace:FindFirstChild("MAP") 
            and workspace.MAP:FindFirstChild("INTERACT")
            and workspace.MAP.INTERACT:FindFirstChild("FishingPads") 
            and workspace.MAP.INTERACT.FishingPads:FindFirstChild("Ice") 
            and workspace.MAP.INTERACT.FishingPads.Ice:FindFirstChild("PadGlow")

        if not padGlow then
            warn("PadGlow –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        end

        -- –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if not originalSize or not originalPosition then
            originalSize = padGlow.Size
            originalPosition = padGlow.Position
        end

        if Value then
            print("–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞")
            padGlow.Size = Vector3.new(originalSize.X * 100, originalSize.Y, originalSize.Z * 100)
            padGlow.Anchored = true
            padGlow.CanCollide = false
        else
            print("–°–±—Ä–æ—Å –æ–±—ä–µ–∫—Ç–∞ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –≤–∏–¥—É")
            padGlow.Size = originalSize
            padGlow.Position = originalPosition
        end
    end
})

local originalSize = nil
local originalPosition = nil

Tab:AddToggle({
    Name = "Corrupt AutoFish",
    Default = false,
    Callback = function(Value)
        local padGlow = workspace:FindFirstChild("MAP") 
            and workspace.MAP:FindFirstChild("INTERACT")
            and workspace.MAP.INTERACT:FindFirstChild("FishingPads") 
            and workspace.MAP.INTERACT.FishingPads:FindFirstChild("Corrupted") 
            and workspace.MAP.INTERACT.FishingPads.Corrupted:FindFirstChild("PadGlow")

        if not padGlow then
            warn("PadGlow –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        end

        -- –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if not originalSize or not originalPosition then
            originalSize = padGlow.Size
            originalPosition = padGlow.Position
        end

        if Value then
            print("–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞")
            padGlow.Size = Vector3.new(originalSize.X * 100, originalSize.Y, originalSize.Z * 100)
            padGlow.Anchored = true
            padGlow.CanCollide = false
        else
            print("–°–±—Ä–æ—Å –æ–±—ä–µ–∫—Ç–∞ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –≤–∏–¥—É")
            padGlow.Size = originalSize
            padGlow.Position = originalPosition
        end
    end
})

_G.AutoBuyFishingMerchant = false
_G.AutoBuyIceFishingMerchant = false

local function purchaseFishingMerchant()
    for i = 1, 6 do
        local args = {"FishingMerchant", i}
        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("CustomMerchants_Purchase"):InvokeServer(unpack(args))
    end
end

local function purchaseIceFishingMerchant()
    for i = 1, 6 do
        local args = {"IceFishingMerchant", i}
        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("CustomMerchants_Purchase"):InvokeServer(unpack(args))
    end
end

local function startAutoBuying()
    while _G.AutoBuyFishingMerchant or _G.AutoBuyIceFishingMerchant do
        if _G.AutoBuyFishingMerchant then
            purchaseFishingMerchant()
        end
        if _G.AutoBuyIceFishingMerchant then
            purchaseIceFishingMerchant()
        end
        wait(0.35)
    end
end

Tab:AddToggle({
    Name = "AutoBuy Fishing Merchant",
    Default = false,
    Callback = function(Value)
        _G.AutoBuyFishingMerchant = Value
        if Value then
            spawn(startAutoBuying)
        end
    end    
})

Tab:AddToggle({
    Name = "AutoBuy IceFishing Merchant",
    Default = false,
    Callback = function(Value)
        _G.AutoBuyIceFishingMerchant = Value
        if Value then
            spawn(startAutoBuying)
        end
    end    
})
